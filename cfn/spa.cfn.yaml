AWSTemplateFormatVersion: 2010-09-09
Description: Stack for SPA hosted on s3 with cloudfront to serve content

Parameters:
  SpaName:
    Type: String
  CachePolicyId:
    Type: String
    Default: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
  SpaVersion:
    Type: String
    Default: v1

Resources:
  HostingS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub '${SpaName}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      VersioningConfiguration:
        Status: Suspended
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
      Tags:
        - Key: ProjectName
          Value: !Ref SpaName

  HostingS3Access:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref HostingS3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref HostingS3
                  - '/*'

  RewritePathFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub "${SpaName}-router-forward"
      AutoPublish: true
      FunctionConfig:
        Comment: "Function to change requested path for react router"
        Runtime: cloudfront-js-1.0
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var paths = ['static/', '.png', '.ico', 'robots.txt']
          var isServerPath = (path) => request.uri.includes(path);

          if (!paths.some(isServerPath)) {
            request.uri = '/';
          }

          return request;
        }

  SpaDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub 'Distribution for ${SpaName}'
        DefaultCacheBehavior:
          CachePolicyId: !Ref CachePolicyId
          TargetOriginId: hosting
          ViewerProtocolPolicy: redirect-to-https
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt RewritePathFunction.FunctionARN
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: hosting
            DomainName: !GetAtt HostingS3.RegionalDomainName
            OriginPath: !Sub '/${SpaVersion}'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
      Tags:
        - Key: ProjectName
          Value: !Ref SpaName

Outputs:
  S3Bucket:
    Description: Bucket name
    Value: !Ref HostingS3
    Export:
      Name: !Sub '${SpaName}-hosting-s3'
  SiteUrl:
    Description: Site url
    Value: !GetAtt SpaDistribution.DomainName
    Export:
      Name: !Sub '${SpaName}-site-url'